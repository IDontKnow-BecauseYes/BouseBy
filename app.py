import streamlit as st
import google.generativeai as genai

# Configurar chave da API via secrets
genai.configure(api_key=st.secrets["GEMINI_API_KEY"])

# Criar modelo
model = genai.GenerativeModel("gemini-pro")

# Fun√ß√£o para gerar relat√≥rio
def gerar_relatorio(nome, opiniao):
    prompt = f"""
    Gere um relat√≥rio fict√≠cio e criativo, em tom policial/jornal√≠stico, com base no seguinte:

    Nome: {nome}
    Opini√£o pol√™mica: {opiniao}

    O relat√≥rio deve conter:
    - Nome completo
    - Data da pris√£o (entre 2023 e 2030)
    - Motivo da pris√£o (relacionado √† opini√£o pol√™mica)
    - Data da morte (entre a data da pris√£o e 2040)
    - Local da morte (na pris√£o ou na rua)

    Exemplo de estilo:
    Nome: Jo√£o Silva
    Preso em: 14/09/2026
    Motivo: incita√ß√£o ao √≥dio em rede social
    Morreu em: 03/12/2029 (pris√£o)

    Seja criativo, mas realista e direto. No m√°ximo 5 linhas.
    """

    response = model.generate_content(prompt)
    return response.text.strip()

# Interface Streamlit
st.title("üß† Gerador de Relat√≥rios Fict√≠cios")
st.write("Digite o nome de uma pessoa e uma opini√£o pol√™mica para gerar um relat√≥rio policial/jornal√≠stico fict√≠cio.")

nome = st.text_input("Nome completo")
opiniao = st.text_area("Opini√£o pol√™mica")

if st.button("Gerar relat√≥rio"):
    if nome and opiniao:
        resultado = gerar_relatorio(nome, opiniao)
        st.success("Relat√≥rio gerado:")
        st.code(resultado)
    else:
        st.warning("Preencha todos os campos.")

